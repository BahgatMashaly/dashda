package com.dashda.data.entities;
// Generated Apr 4, 2018 2:50:44 PM by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "EMPLOYEE")
public class Employee implements java.io.Serializable {

	private int id;
	private Employee employee;
	private String employeeJobTitle;
	private String employeeNumber;
	private Set users = new HashSet(0);
	private Set employeesCoveredDistricts = new HashSet(0);
	private Set employeesDoctors = new HashSet(0);
	private Set visitsForEmployeeId = new HashSet(0);
	private Set schedulesForEmployeeId = new HashSet(0);
	private Set employees = new HashSet(0);
	private Set schedulesForSubordinateId = new HashSet(0);
	private Set visitsForSubordinateId = new HashSet(0);

	public Employee() {
	}

	public Employee(int id) {
		this.id = id;
	}

	public Employee(int id, Employee employee, String employeeJobTitle,
			String employeeNumber, Set users, Set employeesCoveredDistricts, Set employeesDoctors, Set visitsForEmployeeId,
			Set schedulesForEmployeeId, Set employees, Set schedulesForSubordinateId, Set visitsForSubordinateId) {
		this.id = id;
		this.employee = employee;
		this.employeeJobTitle = employeeJobTitle;
		this.employeeNumber = employeeNumber;
		this.users = users;
		this.employeesCoveredDistricts = employeesCoveredDistricts;
		this.employeesDoctors = employeesDoctors;
		this.visitsForEmployeeId = visitsForEmployeeId;
		this.schedulesForEmployeeId = schedulesForEmployeeId;
		this.employees = employees;
		this.schedulesForSubordinateId = schedulesForSubordinateId;
		this.visitsForSubordinateId = visitsForSubordinateId;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MANAGER_ID")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}
	
	@Column(name = "JOB_TITLE", length = 45)
	public String getEmployeeJobTitle() {
		return employeeJobTitle;
	}

	public void setEmployeeJobTitle(String employeeJobTitle) {
		this.employeeJobTitle = employeeJobTitle;
	}

	@Column(name = "EMPLOYEE_NUMBER", length = 45)
	public String getEmployeeNumber() {
		return this.employeeNumber;
	}

	public void setEmployeeNumber(String employeeNumber) {
		this.employeeNumber = employeeNumber;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<EmployeesCoveredDistrict> getEmployeesCoveredDistricts() {
		return this.employeesCoveredDistricts;
	}

	public void setEmployeesCoveredDistricts(Set employeesCoveredDistricts) {
		this.employeesCoveredDistricts = employeesCoveredDistricts;
	}

	/**
	 * @return the employeesDoctor
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<EmployeeDoctor> getEmployeesDoctors() {
		return employeesDoctors;
	}

	/**
	 * @param employeesDoctor the employeesDoctor to set
	 */
	public void setEmployeesDoctors(Set employeesDoctors) {
		this.employeesDoctors = employeesDoctors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeByEmployeeId")
	public Set<Visit> getVisitsForEmployeeId() {
		return this.visitsForEmployeeId;
	}

	public void setVisitsForEmployeeId(Set visitsForEmployeeId) {
		this.visitsForEmployeeId = visitsForEmployeeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeByEmployeeId")
	public Set<Schedule> getSchedulesForEmployeeId() {
		return this.schedulesForEmployeeId;
	}

	public void setSchedulesForEmployeeId(Set schedulesForEmployeeId) {
		this.schedulesForEmployeeId = schedulesForEmployeeId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeBySubordinateId")
	public Set<Schedule> getSchedulesForSubordinateId() {
		return this.schedulesForSubordinateId;
	}

	public void setSchedulesForSubordinateId(Set schedulesForSubordinateId) {
		this.schedulesForSubordinateId = schedulesForSubordinateId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeBySubordinateId")
	public Set<Visit> getVisitsForSubordinateId() {
		return this.visitsForSubordinateId;
	}

	public void setVisitsForSubordinateId(Set visitsForSubordinateId) {
		this.visitsForSubordinateId = visitsForSubordinateId;
	}

}
